name: CI build

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_run:
    workflows: ["CI release"]
    branches: [ '**' ]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    # Main build job used to
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          # must specify password for PG Docker container image, see: https://registry.hub.docker.com/_/postgres?tab=description&page=1&name=10
          POSTGRES_USER: orbisgis
          POSTGRES_PASSWORD: orbisgis
          POSTGRES_DB: orbisgis_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      # Checkout the source code of the project
      - name: Checkout
        uses: actions/checkout@v4

      # Setup the jdk using version 11 of Adoptium Temurin
      - name: Setup java 11 using Adoptium Temurin
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      #Setup graalvm
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.3'
          java-version: '11'
          components: 'native-image'
          set-java-home: true

      # Build the project using
      #   - clean : clean up the workspace
      #   - validate : perform different check like the dependency and plugin version update
      #   - compile : compile the source code.
      #   - test : Perform the tests.
      - name: Build
        run: mvn -ntp clean validate compile test javadoc:test-javadoc javadoc:jar

      # Check changelog update
      - name: Check changelog update
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            changelog:
              - 'docs/CHANGELOG.md'
            sources:
              - '**/pom.xml'
              - '**/README.md'
              - '**/src/**'
        if: github.event_name != 'workflow_dispatch'

      - if: steps.changes.outputs.changelog == 'false' && github.event_name != 'workflow_dispatch' && steps.changes.outputs.sources == 'true'
        run: |
          echo "Please update the Changelog.md file."
          exit 1